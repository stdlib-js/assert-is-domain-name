{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\n\n\n// VARIABLES //\n\n/**\n* Regular expression: `/^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `[a-z0-9]`\n*     -   match a single digit or letter\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `[a-z0-9-]{0,61}`\n*     -   match between 0 and 61 digits, letters, or hyphens\n*\n* -   `[a-z0-9]`\n*     -   match a single digit or letter\n*\n* -   `?`\n*     -   match the previous token between zero and one times\n*\n* -   `\\.`\n*     -   match a literal `.`\n*\n* -   `+`\n*     -   match the previous group one or more times\n*\n* -   `[a-z0-9]`\n*     -   match a single digit or letter\n*\n* -   `[a-z0-9-]{0,61}`\n*     -   match between 0 and 61 digits, letters, or hyphens\n*\n* -   `[a-z0-9]`\n*     -   match a single digit or letter\n*\n* -   `$`\n*     -   match end of string\n*\n* @private\n* @constant\n* @type {RegExp}\n*/\nvar RE_DOMAIN_NAME = /^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$/i;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a domain name.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a domain name\n*\n* @example\n* var bool = isDomainName( 'beep.boop' );\n* // returns true\n*\n* @example\n* var bool = isDomainName( 'beep boop' );\n* // returns false\n*\n* @example\n* var bool = isDomainName( 'foo@bar.com' );\n* // returns false\n*\n* @example\n* var bool = isDomainName( null );\n* // returns false\n*/\nfunction isDomainName( value ) {\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\tif ( value.length < 2 || value.length > 255 ) {\n\t\treturn false;\n\t}\n\treturn RE_DOMAIN_NAME.test( value );\n}\n\n\n// EXPORTS //\n\nexport default isDomainName;\n"],"names":["RE_DOMAIN_NAME","isDomainName","value","isString","length","test"],"mappings":";;mGAyEA,IAAIA,EAAiB,gFA2BrB,SAASC,EAAcC,GACtB,QAAMC,EAAUD,OAGXA,EAAME,OAAS,GAAKF,EAAME,OAAS,MAGjCJ,EAAeK,KAAMH"}